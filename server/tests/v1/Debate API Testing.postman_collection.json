{
	"info": {
		"_postman_id": "2995ef34-c88d-4c12-972f-2d7139881e2f",
		"name": "Debate API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38095728"
	},
	"item": [
		{
			"name": "New Folder",
			"item": [
				{
					"name": "getDebates",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "createDebate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body has the required fields\", function () {\r",
									"    const requiredFields = [\"html\", \"head\", \"meta\", \"title\", \"body\"];\r",
									"    const responseBody = pm.response.text();\r",
									"\r",
									"    requiredFields.forEach(field => {\r",
									"        pm.expect(responseBody).to.include(field, `Response body should contain ${field}`);\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content type is 'text/html'\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate the response includes the error message 'Cannot GET /'\", function () {\r",
									"    const responseData = pm.response.text();\r",
									"    \r",
									"    pm.expect(responseData).to.include(\"Cannot GET /\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"topic\": \"The Future of Artificial Intelligence\",\r\n  \"status\": \"open\",\r\n  \"timeStamp\": \"2024-09-15T10:22:00.000Z\",\r\n  \"endTime\": \"2024-09-30T23:59:59.000Z\",\r\n  \"creator\": \"66e6d011c175516aa1886420\",  // Replace with a valid ObjectId for a User\r\n  \"arguments\": [\r\n    \"66e6d048c175516aa1886421\",  // Replace with valid ObjectIds for Arguments\r\n    \"66e6d051c175516aa1886422\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/debate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"debate"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllDebates",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "deleteDebateByID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getDebateByID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "updateAllDebateFields",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "updateSelectedValue",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "postArgumentToDebate",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getAllArgumentsOfDebate",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getArgumentRelatedToDebate",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getAgumentByID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	]
}